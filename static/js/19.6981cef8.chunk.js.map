{"version":3,"file":"static/js/19.6981cef8.chunk.js","mappings":"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","sources":["components/Home/LeftPanelHomeScreen.js","components/Card/Card.js","components/Home/RightPanelHomeScreen.js","Pages/Home.js","components/ModalTypes/NewFolder.js","components/ModalTypes/Loading.js","components/ModalTypes/EditFolder.js","components/ModalTypes/EditPlaygroundTitle.js","components/ModalTypes/NewPlayGround.js","components/ModalTypes/NewPlayGroundAndFolder.js","components/Card/Modal.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\n\r\nfunction LeftPanelHomeScreen() {\r\n  const { openModal } = useContext(ModalContext);\r\n\r\n  return (\r\n    <div className=\"border-2 w-[100%] border-[black] h-screen bg-[black] flex justify-end\">\r\n      <div className=\"mx-auto w-[100%] flex flex-col items-center justify-center gap-3\">\r\n        <img\r\n          src={require(\"./Visual_Studio_Code_1.35_icon.svg.png\")}\r\n          alt=\"Logo\"\r\n          width={\"200px\"}\r\n          height={\"auto\"}\r\n        />\r\n        <h3 className=\"font-semibold text-white text-green-600\">Code Deck</h3>\r\n        <h3 className=\"font-semibold text-white\">\r\n          Code... Compile... Debug...\r\n        </h3>\r\n\r\n        <button\r\n          className=\" p-4 w-[60%] font-semibold bg-white shadow-lg rounded-lg drop-shadow-2xl\"\r\n          onClick={() =>{\r\n\r\n            console.log(\"button clicked\")\r\n            openModal({\r\n              show: true,\r\n              modalType: 3,\r\n              identifiers: {\r\n                folderId: \"\",\r\n                cardID: \"\",\r\n              },\r\n              \r\n            })\r\n          }\r\n          }\r\n        >\r\n          + Create New Playground\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeftPanelHomeScreen;","import React from \"react\";\r\n\r\nfunction Card({ children }) {\r\n  return (\r\n    <div className=\"hover:scale-105 bg-white h-auto drop-shadow-xl rounded-lg p-6 ease-in-out duration-500\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useContext } from \"react\";\r\nimport { FcOpenedFolder } from \"react-icons/fc\";\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\nimport { IoTrashOutline } from \"react-icons/io5\";\r\nimport Card from \"../Card/Card\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport { PlaygroundContext } from \"../../Context/PlaygroundContext\";\r\nimport { useNavigate } from \"react-router\";\r\nfunction RightPanelHomeScreen() {\r\n  const navigate = useNavigate();\r\n  const { openModal } = useContext(ModalContext);\r\n  const { folders, deleteFolder, deleteCard } = useContext(PlaygroundContext);\r\n  return (\r\n    <div className=\"border-2 border-black h-screen p-8\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2>\r\n          My <span className=\"font-semibold text-2xl\">Playground</span>\r\n        </h2>\r\n        <h4\r\n          onClick={() =>\r\n            openModal({\r\n              show: true,\r\n              modalType: 1,\r\n              identifiers: {\r\n                folderId: \"\",\r\n                cardID: \"\",\r\n              },\r\n            })\r\n          }\r\n        >\r\n          <span className=\"font-semibold text-2xl\">+</span> New Folder\r\n        </h4>\r\n      </div>\r\n      <hr className=\"mb-12 mt-4 bg-black\" />\r\n      {Object.entries(folders).map(([folderId, folder], idx) => (\r\n        <div className=\"flex flex-col my-8\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"flex items-center\"></div>\r\n              <FcOpenedFolder size={\"2em\"} />\r\n              <h3 className=\"font-semibold\">{folder.title}</h3>\r\n            </div>\r\n            <div className=\"flex gap-4 items-center\">\r\n              <BiEditAlt\r\n                size={\"1.5em\"}\r\n                onClick={() => {\r\n                  openModal({\r\n                    show: true,\r\n                    modalType: 4,\r\n                    identifiers: {\r\n                      folderId: folderId, //folderid pass kar rahe hai\r\n                      cardID: \"\",\r\n                    },\r\n                  });\r\n                }}\r\n              />\r\n              <IoTrashOutline\r\n                size={\"1.5em\"}\r\n                onClick={() => deleteFolder(folderId)}\r\n              />\r\n              <h4\r\n                onClick={() => {\r\n                  openModal({\r\n                    show: true,\r\n                    modalType: 2,\r\n                    identifiers: {\r\n                      folderId: folderId,\r\n                      cardID: \"\",\r\n                    },\r\n                  });\r\n                }}\r\n              >\r\n                + New Playground\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <hr className=\"mb-12 mt-4 bg-black\" />\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4\">\r\n            {Object.entries(folder[\"playgrounds\"]).map(\r\n              ([playgroundId, playground]) => (\r\n                <Card key={playgroundId}>\r\n                  <div\r\n                    className=\"flex items-center justify-between\"\r\n                    onClick={() => {\r\n                      navigate(`/code/${folderId}/${playgroundId}`);\r\n                    }}\r\n                  >\r\n                    <div className=\"flex gap-4\">\r\n                      <img\r\n                        src={require(\"./code-logo.png\")}\r\n                        alt=\"small-logo\"\r\n                        width={\"30px\"}\r\n                      />\r\n                      <div>\r\n                        <h4>{playground.title}</h4>\r\n                        <h4>language: {playground.language}</h4>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex gap-4 items-center\">\r\n                      <BiEditAlt\r\n                        size={\"1.5em\"}\r\n                        onClick={() =>\r\n                          openModal({\r\n                            show: true,\r\n                            modalType: 5,\r\n                            identifiers: {\r\n                              folderId: folderId,\r\n                              cardID: playgroundId,\r\n                            },\r\n                          })\r\n                        }\r\n                      />\r\n                      <IoTrashOutline\r\n                        size={\"1.5em\"}\r\n                        onClick={() => deleteCard(folderId, playgroundId)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RightPanelHomeScreen;\r\n","import React, { useContext } from \"react\";\r\nimport Modal from \"../components/Card/Modal\";\r\nimport LeftPanelHomeScreen from \"../components/Home/LeftPanelHomeScreen\";\r\nimport RightPanelHomeScreen from \"../components/Home/RightPanelHomeScreen\";\r\nimport { ModalContext } from \"../Context/ModalContext\";\r\nfunction Home() {\r\n  const {isOpenModal} = useContext(ModalContext);\r\n  return (\r\n    <div className=\"flex flex-row w-[100%]\">\r\n      <div className=\"w-[30%]\">\r\n        <LeftPanelHomeScreen />\r\n      </div>\r\n      <div className=\"w-[70%]\">\r\n        <RightPanelHomeScreen />\r\n      </div>\r\n      {isOpenModal.show && <Modal />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useContext, useState } from \"react\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport { PlaygroundContext } from \"../../Context/PlaygroundContext\";\r\n\r\nfunction NewFolder() {\r\n  const { closeModal } = useContext(ModalContext);\r\n  const { addFolder } = useContext(PlaygroundContext);\r\n  const [folderTitle, setFolderTitle] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row justify-end p-4\">\r\n        <RxCross1 className=\"cursor-pointer\" onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=\"px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6\">\r\n        <h2>Create a New Folder</h2>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setFolderTitle(e.target.value)}\r\n          value={folderTitle}\r\n          placeholder=\"please enter folder title\"\r\n          className=\"border-[.5px] text-sm border-gray-50 rounded-lg shadow-sm p-2 w-full\"\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            addFolder(folderTitle);\r\n            closeModal();\r\n          }}\r\n          className=\"p-3 w-36 text-black bg-white rounded-lg font-semibold border-[.5px] border-gray-50 shadow-lg\"\r\n        >\r\n          Create Folder\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewFolder;","import React from 'react'\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div>Loading</div>\r\n  )\r\n}\r\n\r\nexport default Loading","import React, { useContext, useState } from \"react\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport { PlaygroundContext } from \"../../Context/PlaygroundContext\";\r\nfunction EditFolder() {\r\n  const { closeModal, isOpenModal } = useContext(ModalContext);\r\n  const { editFolderTitle, folders } = useContext(PlaygroundContext);\r\n  const { folderId } = isOpenModal.identifiers;\r\n  const [folderTitle, setFolderTitle] = useState(folders[folderId].title);\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row justify-end p-4\">\r\n        <RxCross1 className=\"cursor-pointer\" onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=\"px-6 my-4 mb-8 flex flex-col items-center justify-center gap-6\">\r\n        <h2>Edit Folder</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={folderTitle}\r\n          onChange={(e) => setFolderTitle(e.target.value)}\r\n          className=\"border-[.5px] text-sm border-gray-50 rounded-lg shadow-sm p-2 w-full\"\r\n        />\r\n        <button\r\n        onClick={()=>{\r\n          editFolderTitle(folderId, folderTitle);\r\n          closeModal();\r\n        }}\r\n        className=\"p-3 w-36 text-black bg-white rounded-lg font-semibold border-[.5px] border-gray-50 shadow-lg\"\r\n        >Proceed</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditFolder;","import React, { useContext, useState } from \"react\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport { PlaygroundContext } from \"../../Context/PlaygroundContext\";\r\n\r\nfunction EditPlaygroundTitle() {\r\n  const { closeModal, isOpenModal } = useContext(ModalContext);\r\n  const { editCardTitle, folders } = useContext(PlaygroundContext);\r\n  const { cardID } = isOpenModal.identifiers;\r\n  const { folderId } = isOpenModal.identifiers;\r\n  const [cardTitle, setCardTitle] = useState(folders[folderId].playgrounds[cardID].title);\r\n  console.log(\"cc\",cardTitle)\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row justify-end p-4\">\r\n        <RxCross1 className=\"cursor-pointer\" onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=\"px-6 my-4 mb-8 flex flex-col items-center justify-center gap-6\">\r\n        <h2>Edit Folder</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={cardTitle}\r\n          onChange={(e) => setCardTitle(e.target.value)}\r\n          className=\"border-[.5px] text-sm border-gray-50 rounded-lg shadow-sm p-2 w-full\"\r\n        />\r\n        <button\r\n        onClick={()=>{\r\n          editCardTitle(folderId,cardID, cardTitle);\r\n          closeModal();\r\n        }}\r\n        className=\"p-3 w-36 text-black bg-white rounded-lg font-semibold border-[.5px] border-gray-50 shadow-lg\"\r\n        >Proceed</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditPlaygroundTitle;\r\n","import React, { useContext, useState } from \"react\";\r\n// npm i react-select\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport { PlaygroundContext } from \"../../Context/PlaygroundContext\";\r\nimport Select from \"react-select\";\r\nfunction NewPlayGround() {\r\n  const { isOpenModal, closeModal } = useContext(ModalContext);\r\n  const { addPlayground } = useContext(PlaygroundContext);\r\n  const languageOptions = [\r\n    // value -> hex, label -> string\r\n    { value: \"javascript\", label: \"javascript\" }, // label will be visible to user // value will be passed to db;\r\n    { value: \"python\", label: \"python\" },\r\n    { value: \"java\", label: \"java\" },\r\n    { value: \"cpp\", label: \"cpp\" },\r\n  ];\r\n  const { folderId } = isOpenModal.identifiers;\r\n  const [cardTitle, setCardTitle] = useState(\"\");\r\n  // language is an objl\r\n  const [language, setLanguage] = useState(languageOptions[0]); // this state will be holding language of playground\r\n  // initially it's storing js;\r\n  const handleLangChange = (selectedOption) => {\r\n    setLanguage(selectedOption);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row justify-end p-4\">\r\n        <RxCross1 className=\"cursor-pointer\" onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=\"px-6 my-4 mb-8 flex flex-col items-center justify-center gap-6\">\r\n        <h2>Create A New Playground</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={cardTitle}\r\n          onChange={(e) => setCardTitle(e.target.value)}\r\n          className=\"border-[.5px] text-sm border-gray-50 rounded-lg shadow-sm p-2 w-full\"\r\n        />\r\n        <Select\r\n          options={languageOptions} // array of objects;\r\n          value={language} // this is an object;\r\n          onChange={handleLangChange}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            addPlayground(folderId, cardTitle, language.value);\r\n            closeModal();\r\n          }}\r\n          className=\"p-3 w-36 text-black bg-white rounded-lg font-semibold border-[.5px] border-gray-50 shadow-lg\"\r\n        >\r\n          Create Playground\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewPlayGround;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport { PlaygroundContext } from \"../../Context/PlaygroundContext\";\r\nimport Select from \"react-select\";\r\nfunction NewPlayGroundAndFolder() {\r\n  const { closeModal } = useContext(ModalContext);\r\n  const { addPlaygroundAndFolder } = useContext(PlaygroundContext);\r\n  const languageOptions = [\r\n    // value -> hex, label -> string\r\n    { value: \"javascript\", label: \"javascript\" }, // label will be visible to user // value will be passed to db;\r\n    { value: \"python\", label: \"python\" },\r\n    { value: \"java\", label: \"java\" },\r\n    { value: \"cpp\", label: \"cpp\" },\r\n  ];\r\n  const [playgroundName, setPlaygroundName] = useState(\"\");\r\n  const [folderName, setFolderName] = useState(\"\");\r\n  const [language, setLanguage] = useState(languageOptions[0]);\r\n  const handleLangChange = (selectedOption) => {\r\n    setLanguage(selectedOption);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row justify-end p-4\">\r\n        <RxCross1 className=\"cursor-pointer\" onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=\"px-6 my-4 mb-8 flex flex-col items-center justify-center gap-6\">\r\n        <h2>Create A New Playground & New Folder</h2>\r\n        <span>Folder Name</span>\r\n        <input\r\n          type=\"text\"\r\n          value={folderName}\r\n          onChange={(e) => setFolderName(e.target.value)}\r\n          className=\"border-[.5px] text-sm border-gray-50 rounded-lg shadow-sm p-2 w-full\"\r\n        />\r\n        <span>Card Name</span>\r\n        <input\r\n          type=\"text\"\r\n          value={playgroundName}\r\n          onChange={(e) => setPlaygroundName(e.target.value)}\r\n          className=\"border-[.5px] text-sm border-gray-50 rounded-lg shadow-sm p-2 w-full\"\r\n        />\r\n        <Select\r\n          options={languageOptions} // array of objects;\r\n          value={language} // this is an object;\r\n          onChange={handleLangChange}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            addPlaygroundAndFolder(folderName, playgroundName, language.value);\r\n            closeModal();\r\n          }}\r\n          className=\"p-3 w-36 text-black bg-white rounded-lg font-semibold border-[.5px] border-gray-50 shadow-lg\"\r\n        >\r\n          Create Playground\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewPlayGroundAndFolder;","import { useContext } from \"react\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport {\r\n  NewFolder,\r\n  EditFolder,\r\n  EditPlaygroundTitle,\r\n  Loading,\r\n  NewPlayGround,\r\n  NewPlayGroundAndFolder,\r\n} from \"../ModalTypes\";\r\nfunction Modal() {\r\n  const { isOpenModal } = useContext(ModalContext);\r\n  const { modalType } = isOpenModal;\r\n//   modaltypes\r\n// 1: NewFolder\r\n// 2: NewPlayground\r\n// 3: NewPlayGroundAndFolder\r\n// 4: EditFolder\r\n//5: EditPlaygroundTitle\r\n//6: Loading\r\n  return (\r\n    <div className=\"flex justify-center items-center overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\">\r\n  <div\r\n    className=\"fixed inset-0 bg-gray-900 bg-opacity-50 transition-opacity\"\r\n    onClick={(e) => {\r\n      e.stopPropagation();\r\n    }}\r\n  ></div>\r\n  <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\r\n    <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-[30rem] bg-white focus:outline-none\">\r\n      {modalType === 1 && <NewFolder />}\r\n      {modalType === 2 && <NewPlayGround />}\r\n      {modalType === 3 && <NewPlayGroundAndFolder />}\r\n      {modalType === 4 && <EditFolder />}\r\n      {modalType === 5 && <EditPlaygroundTitle />}\r\n      {modalType === 6 && <Loading />}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  );\r\n}\r\n\r\nexport default Modal;"],"names":["openModal","useContext","ModalContext","_jsx","className","children","_jsxs","src","require","alt","width","height","onClick","console","log","show","modalType","identifiers","folderId","cardID","_ref","navigate","useNavigate","_useContext2","PlaygroundContext","folders","deleteFolder","deleteCard","Object","entries","map","idx","_ref2","_slicedToArray","folder","FcOpenedFolder","size","title","BiEditAlt","IoTrashOutline","_ref3","_ref4","playgroundId","playground","Card","concat","language","isOpenModal","LeftPanelHomeScreen","RightPanelHomeScreen","Modal","closeModal","addFolder","_useState","useState","_useState2","folderTitle","setFolderTitle","_Fragment","RxCross1","type","onChange","e","target","value","placeholder","_useContext","editFolderTitle","editCardTitle","playgrounds","cardTitle","setCardTitle","addPlayground","languageOptions","label","_useState3","_useState4","setLanguage","Select","options","selectedOption","addPlaygroundAndFolder","playgroundName","setPlaygroundName","folderName","setFolderName","_useState5","_useState6","stopPropagation","NewFolder","NewPlayGround","NewPlayGroundAndFolder","EditFolder","EditPlaygroundTitle","Loading"],"sourceRoot":""}